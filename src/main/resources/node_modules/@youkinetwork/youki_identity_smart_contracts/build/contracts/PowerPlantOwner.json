{
  "contractName": "PowerPlantOwner",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor of  Investor\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/PowerPlantOwner.sol\":\"PowerPlantOwner\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/PowerPlantOwner.sol\":{\"keccak256\":\"0x7bc359fe60edc3f40fe8687c6200c23e2a89edab4313627fa12a282f112703be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd11bebeee1ca53965ac972627ef84ee78a52ed770ff776c2dadd8e2f8559b61\",\"dweb:/ipfs/QmUMYRPNiNcUSSuanFXHboH7NhLkH1crXF7AX2kL9cpRYd\"]},\"project:/contracts/libraries/AddressLib.sol\":{\"keccak256\":\"0xf7cf5782c62c157dc2f7ef456a721805d7945d6e8fc73e1befd2958ef4c361e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://793dfb7206b351b27502d52c666af35d76cdb13c9e9629dc138abf472dd8efca\",\"dweb:/ipfs/QmWrnpeeGcdcami8iAcYTmK7v5ZUzkhwfKSj1Tx7xWHiTS\"]},\"project:/contracts/libraries/BirthDataLib.sol\":{\"keccak256\":\"0x5659b85ace5063ede58df83548f44caa6b351608255c38edaa9ced6cd994edd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbc06cb802889d06d670b5d3eb804e650dff9b2509f08e944b64130a95e62155\",\"dweb:/ipfs/QmauY4ueoDb73oNFGxZCJb77tbsReu6tyXD3ud3tWCED9m\"]},\"project:/contracts/libraries/EntityMetaInformationLib.sol\":{\"keccak256\":\"0x1a61ded2adc50726f584b51c45b5d2b0f36575bab233e3f24b21ff10787f23d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fd7c4327c7b6f40955b5e8c54fc86002ac1c676889083f08c11cc94716c0b0d8\",\"dweb:/ipfs/QmUuYuvR9bFMPMotAqja7vfbyLa5FfhwNnA2DgvxpkGbeo\"]},\"project:/contracts/libraries/SharedLib.sol\":{\"keccak256\":\"0x4536f529526b1bfbf9675540c40a200f1cf2c917d4e2a31d057fa5852922a987\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f565eeae5b6fa1bc85e893cff3a1f3cf9988069dceb89c8a597256aa7912d554\",\"dweb:/ipfs/QmUqWX9RUv5GkA7879zcBycZdR4LUMJpcqYZjRk8XdrKLh\"]},\"project:/contracts/libraries/XpectoLib.sol\":{\"keccak256\":\"0xc5d577cda18b537980ec8ec9c4182a7ba76195645bebf6479294a383b99b3ebc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b06b152ea7ca317518d0f14482554c40fc0bf5706793478ef395fbea880edb8\",\"dweb:/ipfs/QmUxctDMJczsWs2RLCkMXYRkWocQZPpkQvGSuFhp8PNqwr\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061002161001c610026565b61002a565b61007a565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61029c806100896000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e610081565b005b6100586100d5565b60405161006591906101d7565b60405180910390f35b61004e61007c3660046101a9565b6100e4565b610089610155565b6001600160a01b031661009a6100d5565b6001600160a01b0316146100c95760405162461bcd60e51b81526004016100c090610231565b60405180910390fd5b6100d36000610159565b565b6000546001600160a01b031690565b6100ec610155565b6001600160a01b03166100fd6100d5565b6001600160a01b0316146101235760405162461bcd60e51b81526004016100c090610231565b6001600160a01b0381166101495760405162461bcd60e51b81526004016100c0906101eb565b61015281610159565b50565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156101ba578081fd5b81356001600160a01b03811681146101d0578182fd5b9392505050565b6001600160a01b0391909116815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea264697066735822122056a06f05e7cf1c10a0f7581de4ce267677c6fb8dfb45c3f70bfb07825cff1d0b64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b1461006e575b600080fd5b61004e610081565b005b6100586100d5565b60405161006591906101d7565b60405180910390f35b61004e61007c3660046101a9565b6100e4565b610089610155565b6001600160a01b031661009a6100d5565b6001600160a01b0316146100c95760405162461bcd60e51b81526004016100c090610231565b60405180910390fd5b6100d36000610159565b565b6000546001600160a01b031690565b6100ec610155565b6001600160a01b03166100fd6100d5565b6001600160a01b0316146101235760405162461bcd60e51b81526004016100c090610231565b6001600160a01b0381166101495760405162461bcd60e51b81526004016100c0906101eb565b61015281610159565b50565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156101ba578081fd5b81356001600160a01b03811681146101d0578182fd5b9392505050565b6001600160a01b0391909116815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea264697066735822122056a06f05e7cf1c10a0f7581de4ce267677c6fb8dfb45c3f70bfb07825cff1d0b64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1298:19",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:19",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:236:19",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "139:6:19"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "147:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:19"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:19"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:19"
                  },
                  "nodeType": "YulIf",
                  "src": "94:2:19"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "165:36:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "191:9:19"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "178:12:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "178:23:19"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "169:5:19",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "264:26:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "273:6:19"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "281:6:19"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "266:6:19"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "266:22:19"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "266:22:19"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "223:5:19"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "234:5:19"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "249:3:19",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "254:1:19",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "245:3:19"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "245:11:19"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "258:1:19",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "241:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "241:19:19"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "230:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "230:31:19"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "220:2:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "220:42:19"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "213:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "213:50:19"
                  },
                  "nodeType": "YulIf",
                  "src": "210:2:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "299:15:19",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "309:5:19"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "299:6:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:19",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:19",
                "type": ""
              }
            ],
            "src": "14:306:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "426:102:19",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "436:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "448:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "459:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "444:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "444:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "436:4:19"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "478:9:19"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "493:6:19"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "509:3:19",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "514:1:19",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "505:3:19"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "505:11:19"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "518:1:19",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "501:3:19"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "501:19:19"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "489:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "489:32:19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "471:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "471:51:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "471:51:19"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "395:9:19",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "406:6:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "417:4:19",
                "type": ""
              }
            ],
            "src": "325:203:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "707:228:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "724:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "735:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "717:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "717:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "717:21:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "758:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "769:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "754:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "754:18:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "774:2:19",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "747:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "747:30:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "747:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "797:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "808:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "793:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "793:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "813:34:19",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "786:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "786:62:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "786:62:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "868:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "879:2:19",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "864:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "864:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "884:8:19",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "857:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "857:36:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "857:36:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "902:27:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "914:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "925:3:19",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "910:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "910:19:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "902:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "684:9:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "698:4:19",
                "type": ""
              }
            ],
            "src": "533:402:19"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1114:182:19",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1131:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1142:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1124:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1124:21:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1124:21:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1165:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1176:2:19",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1161:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1161:18:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1181:2:19",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1154:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1154:30:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1154:30:19"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1204:9:19"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1215:2:19",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1200:3:19"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1200:18:19"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1220:34:19",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1193:6:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1193:62:19"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1193:62:19"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1264:26:19",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1276:9:19"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1287:2:19",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1272:3:19"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1272:18:19"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1264:4:19"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1091:9:19",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1105:4:19",
                "type": ""
              }
            ],
            "src": "940:356:19"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 19,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "190:152:7:-:0;;;309:21;;;;;;;;;-1:-1:-1;921:32:0;940:12;:10;:12::i;:::-;921:18;:32::i;:::-;190:152:7;;640:96:1;719:10;640:96;:::o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2270:187;;:::o;190:152:7:-;;;;;;;",
  "deployedSourceMap": "190:152:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1668:101:0;;;:::i;:::-;;1036:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198;;;;;;:::i;:::-;;:::i;1668:101::-;1259:12;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:0;;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1036:85::-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;1036:85;:::o;1918:198::-;1259:12;:10;:12::i;:::-;-1:-1:-1;;;;;1248:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1248:23:0;;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;;-1:-1:-1::0;;;1998:73:0::1;;;;;;;:::i;:::-;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;640:96:1:-;719:10;640:96;:::o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2270:187;;:::o;14:306:19:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;178:23;;-1:-1:-1;;;;;230:31:19;;220:42;;210:2;;281:6;273;266:22;210:2;309:5;84:236;-1:-1:-1;;;84:236:19:o;325:203::-;-1:-1:-1;;;;;489:32:19;;;;471:51;;459:2;444:18;;426:102::o;533:402::-;735:2;717:21;;;774:2;754:18;;;747:30;813:34;808:2;793:18;;786:62;-1:-1:-1;;;879:2:19;864:18;;857:36;925:3;910:19;;707:228::o;940:356::-;1142:2;1124:21;;;1161:18;;;1154:30;1220:34;1215:2;1200:18;;1193:62;1287:2;1272:18;;1114:182::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.0 <0.9.0;\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"./libraries/SharedLib.sol\";\n\n/*holds PowerPlant owner logic  */\n\ncontract PowerPlantOwner is Ownable {\n\n    address[] powerPlants;\n\n    /**\n     * Constructor of  Investor\n     */\n    constructor(){\n\n    }\n\n\n  \n    \n}\n",
  "sourcePath": "/home/nour/Documents/work/youki_identity_smart_contracts/contracts/PowerPlantOwner.sol",
  "ast": {
    "absolutePath": "project:/contracts/PowerPlantOwner.sol",
    "exportedSymbols": {
      "Address": [
        1048
      ],
      "BirthData": [
        1057
      ],
      "Context": [
        126
      ],
      "EntityMetaInformation": [
        1182
      ],
      "Ownable": [
        104
      ],
      "PowerPlantOwner": [
        588
      ],
      "SharedLib": [
        1287
      ],
      "XpectoData": [
        1294
      ]
    },
    "id": 589,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 575,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:7"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 576,
        "nodeType": "ImportDirective",
        "scope": 589,
        "sourceUnit": 105,
        "src": "64:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/libraries/SharedLib.sol",
        "file": "./libraries/SharedLib.sol",
        "id": 577,
        "nodeType": "ImportDirective",
        "scope": 589,
        "sourceUnit": 1288,
        "src": "117:35:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 578,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "218:7:7"
            },
            "id": 579,
            "nodeType": "InheritanceSpecifier",
            "src": "218:7:7"
          }
        ],
        "contractDependencies": [
          104,
          126
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 588,
        "linearizedBaseContracts": [
          588,
          104,
          126
        ],
        "name": "PowerPlantOwner",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 582,
            "mutability": "mutable",
            "name": "powerPlants",
            "nodeType": "VariableDeclaration",
            "scope": 588,
            "src": "233:21:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 580,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "233:7:7",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 581,
              "nodeType": "ArrayTypeName",
              "src": "233:9:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 586,
              "nodeType": "Block",
              "src": "322:8:7",
              "statements": []
            },
            "documentation": {
              "id": 583,
              "nodeType": "StructuredDocumentation",
              "src": "261:43:7",
              "text": " Constructor of  Investor"
            },
            "id": 587,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "320:2:7"
            },
            "returnParameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "322:0:7"
            },
            "scope": 588,
            "src": "309:21:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 589,
        "src": "190:152:7"
      }
    ],
    "src": "32:311:7"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/PowerPlantOwner.sol",
    "exportedSymbols": {
      "Address": [
        1048
      ],
      "BirthData": [
        1057
      ],
      "Context": [
        126
      ],
      "EntityMetaInformation": [
        1182
      ],
      "Ownable": [
        104
      ],
      "PowerPlantOwner": [
        588
      ],
      "SharedLib": [
        1287
      ],
      "XpectoData": [
        1294
      ]
    },
    "id": 589,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 575,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:7"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 576,
        "nodeType": "ImportDirective",
        "scope": 589,
        "sourceUnit": 105,
        "src": "64:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/libraries/SharedLib.sol",
        "file": "./libraries/SharedLib.sol",
        "id": 577,
        "nodeType": "ImportDirective",
        "scope": 589,
        "sourceUnit": 1288,
        "src": "117:35:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 578,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "218:7:7"
            },
            "id": 579,
            "nodeType": "InheritanceSpecifier",
            "src": "218:7:7"
          }
        ],
        "contractDependencies": [
          104,
          126
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 588,
        "linearizedBaseContracts": [
          588,
          104,
          126
        ],
        "name": "PowerPlantOwner",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 582,
            "mutability": "mutable",
            "name": "powerPlants",
            "nodeType": "VariableDeclaration",
            "scope": 588,
            "src": "233:21:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 580,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "233:7:7",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 581,
              "nodeType": "ArrayTypeName",
              "src": "233:9:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 586,
              "nodeType": "Block",
              "src": "322:8:7",
              "statements": []
            },
            "documentation": {
              "id": 583,
              "nodeType": "StructuredDocumentation",
              "src": "261:43:7",
              "text": " Constructor of  Investor"
            },
            "id": 587,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "320:2:7"
            },
            "returnParameters": {
              "id": 585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "322:0:7"
            },
            "scope": 588,
            "src": "309:21:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 589,
        "src": "190:152:7"
      }
    ],
    "src": "32:311:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2022-03-14T17:19:31.723Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Constructor of  Investor"
      }
    },
    "version": 1
  }
}