// SPDX-License-Identifier: MIT
pragma solidity >=0.8.0 <0.9.0;

library CheckingLib {
    
    /**
     * @dev check if a wallet exists
     * @param _walletAddress to check if exists
     * @param _usersWallets user's wallets
     * @return true if exists / false if not
     */
    function walletExists(address _walletAddress, address[] memory _usersWallets ) internal pure returns (bool) {
        uint i = 0;
        bool exist = false;
        if (_usersWallets.length == 0) {
            return false;
        }
        do {
            if (_usersWallets[i] == _walletAddress) {
                exist = true;
            } else {
                i++;
            }
        } while (i < _usersWallets.length && exist == false);
        return exist;
    }

    /**
     * @dev check if an email address exists
     * @param _email to check if exists
     * @param _usersEmails user's email addresses 
     * @return true if exists / false if not
     */
    function emailExists(string memory _email, bytes32[] memory _usersEmails) internal pure returns (bool) {
        uint i = 0;
        bool exist = false;
        if (_usersEmails.length == 0) {
            return false;
        }
        do {
            if (_usersEmails[i] == keccak256(abi.encodePacked(_email))) {
                exist = true;
            } else {
                i++;
            }
        } while (i < _usersEmails.length && exist == false);
        return exist;
    }
}